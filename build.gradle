buildscript {
    ext.kotlin_version = '1.1.50'
    ext.spring_boot_version = '2.0.0.M3'
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "com.moowork.gradle:gradle-node-plugin:1.1.0"
    }
}


apply plugin: 'maven'
apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: 'java'
apply plugin: "kotlin-spring" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
apply plugin: 'org.springframework.boot'

apply plugin: "jacoco"
apply plugin: 'findbugs'
apply plugin: "com.moowork.node"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


jacocoTestReport {
    reports {
        xml.enabled
        csv.enabled
        html.destination file("${buildDir}/reports/jacocoHtml")
    }
}


ext.kotlinVersion = '1.1.50'
ext.springbootVersion = '2.0.0.M4'
ext.aspectjVersion = '1.8.7'
ext.jsonPathVersion = '2.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-snapshot' }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
}


jar {
    group = 'com.und'
    baseName = 'emailsendservice'
    version = '0.1.0'
}

node
        {
            version = "7.5.0"
            download = true
            nodeModulesDir = file("frontend")
        }

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'build'
    description = 'Compile client side folder for development'
    args = ['run', 'buildDev']
}
task buildClient(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'build'
    description = "Compile client side folder for production"
    args = ['run', 'build']
}
task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'application'
    description = "Build and watches the client side assets for rebuilding"
    args = ['run', 'buildWatch']
}

dependencies {
    testCompile(
            'junit:junit:4.12',
            'org.springframework.security:spring-security-test:4.2.3.RELEASE',

    )
    testCompile "org.mockito:mockito-core:1.+"
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.0.M4') {
        exclude(module: 'commons-logging')
    }
    compile(
            "org.springframework.boot:spring-boot-starter-web:$springbootVersion",
            "org.springframework.boot:spring-boot-starter-data-jpa:$springbootVersion",
            "org.springframework.boot:spring-boot-starter-data-rest:$springbootVersion",
            "org.springframework.boot:spring-boot-starter-mobile:$springbootVersion",
            "org.springframework.boot:spring-boot-starter-security:$springbootVersion",
            "org.springframework.boot:spring-boot-starter-data-mongodb:$springbootVersion",
            "org.springframework.boot:spring-boot-actuator:$springbootVersion",
            "org.aspectj:aspectjrt:$aspectjVersion",
            "org.aspectj:aspectjweaver:$aspectjVersion",
            'org.postgresql:postgresql:9.4-1206-jdbc42',
            'io.jsonwebtoken:jjwt:0.7.0',
            'io.springfox:springfox-swagger2:2.7.0',
            'io.springfox:springfox-swagger-ui:2.7.0',
            'com.google.guava:guava:19.0',
            'org.apache.commons:commons-lang3:3.5',
            'org.flywaydb:flyway-core:3.2.1',
            'javax.servlet:jstl:1.2',
            'jstl:jstl:1.2',
            'taglibs:standard:1.1.2',
            'javax.el:el-api:2.2.1-b04',

    )
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "org.springframework.boot:spring-boot-devtools:$springbootVersion"
    //compile("org.hibernate:hibernate-validator")

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

// https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
    compile "org.quartz-scheduler:quartz:2.3.0"

    // https://mvnrepository.com/artifact/javax.mail/mail
    compile group: 'javax.mail', name: 'mail', version: '1.5.0-b01'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-ses
    compile group: 'com.amazonaws', name: 'aws-java-sdk-ses', version: '1.11.213'
}


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}



bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)

