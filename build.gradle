buildscript {
    ext {
        kotlinVersion = '1.2.30'
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}


apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: "jacoco"
apply plugin: 'findbugs'


sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


jacocoTestReport {
    reports {
        xml.enabled
        csv.enabled
        html.destination file("${buildDir}/reports/jacoco.Html")
    }
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
        reportLevel = "low"
        ignoreFailures = true
        html.destination file("${buildDir}/reports/findBugs.Html")
    }
}

ext {
    swaggerVersion = '2.7.0'
    springCloudVersion = 'Finchley.M8'
    bootRedisVersion = '1.4.7.RELEASE'
    dataRedisVersion = '2.0.0.RELEASE'
    jedisVersion = '2.9.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-snapshot' }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
    mavenLocal()
}


jar {
    group = 'com.und'
    baseName = 'emailsendservice'
    version = '0.2.0'
}



dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-config-client')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
    compile('org.springframework.cloud:spring-cloud-starter-openfeign')
    compile('org.springframework.cloud:spring-cloud-starter-stream-kafka')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile("org.springframework.boot:spring-boot-starter-mobile:1.5.9.RELEASE")
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("org.springframework.boot:spring-boot-starter-freemarker")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.4.1'

//    compile ("com.und:auth-client:0.4.0-SNAPSHOT")
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
    testCompile('org.springframework.security:spring-security-test')
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.5.0'
    testCompile 'org.mockito:mockito-core:1.+'
    compile("io.springfox:springfox-swagger2:$swaggerVersion")
    compile("io.springfox:springfox-swagger-ui:$swaggerVersion")
    compile group: 'nl.martijndwars', name: 'web-push', version: '3.0.1'
    compile group: 'de.bytefish.fcmjava', name: 'fcmjava-core', version: '2.4'
    compile group: 'de.bytefish.fcmjava', name: 'fcmjava-client', version: '2.4'

    compile group: 'javax.mail', name: 'mail', version: '1.5.0-b01'
    compile( "com.amazonaws:aws-java-sdk-ses:1.11.221")
    compile( "com.amazonaws:aws-java-sdk-sns:1.11.221")

    compile(
            "org.springframework.boot:spring-boot-starter-redis:$bootRedisVersion",
            "org.springframework.data:spring-data-redis:$dataRedisVersion",
            "redis.clients:jedis:$jedisVersion",
    )
}



dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}